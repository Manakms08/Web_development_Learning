{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\Self Learning\\\\Web Development\\\\Web_development_logs\\\\React_JS\\\\ES6 Arrow Functions\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\n\nfunction square(x) {\n  return x * x;\n}\n\nvar numbers = [3, 56, 2, 48, 5];\nvar newNumbers = numbers.map(square);\nconsole.lof(newNumbers); ////Map -Create a new array by doing something with each item in an array.\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n//////Filter - Create a new array by keeping the items that return true.\n// const newNumbers = numbers.filter(function(num) {\n//   return num < 10;\n// });\n//Reduce - Accumulate a value by doing something to each item in an array.\n// var newNumber = numbers.reduce(function (accumulator, currentNumber) {\n//     return accumulator + currentNumber;\n// })\n////Find - find the first item that matches from an array.\n// const newNumber = numbers.find(function (num) {\n//   return num > 10;\n// })\n////FindIndex - find the index of the first item that matches.\n// const newNumber = numbers.findIndex(function (num) {\n//   return num > 10;\n// })","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/Self Learning/Web Development/Web_development_logs/React_JS/ES6 Arrow Functions/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","square","x","numbers","newNumbers","map","console","lof"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEAD,QAAQ,CAACE,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAkB;AACd,SAAOA,CAAC,GAACA,CAAT;AACH;;AAEA,IAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,CAAd;AACA,IAAMC,UAAU,GAACD,OAAO,CAACE,GAAR,CAAYJ,MAAZ,CAAjB;AACAK,OAAO,CAACC,GAAR,CAAYH,UAAZ,E,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nfunction square(x){\n    return x*x;\n}\n\n var numbers = [3, 56, 2, 48, 5];\n const newNumbers=numbers.map(square);\n console.lof(newNumbers);\n////Map -Create a new array by doing something with each item in an array.\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n\n//////Filter - Create a new array by keeping the items that return true.\n// const newNumbers = numbers.filter(function(num) {\n//   return num < 10;\n// });\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n// var newNumber = numbers.reduce(function (accumulator, currentNumber) {\n//     return accumulator + currentNumber;\n// })\n\n////Find - find the first item that matches from an array.\n// const newNumber = numbers.find(function (num) {\n//   return num > 10;\n// })\n\n////FindIndex - find the index of the first item that matches.\n// const newNumber = numbers.findIndex(function (num) {\n//   return num > 10;\n// })\n"]},"metadata":{},"sourceType":"module"}