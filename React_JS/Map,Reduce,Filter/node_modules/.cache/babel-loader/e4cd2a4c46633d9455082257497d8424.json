{"ast":null,"code":"var numbers = [3, 56, 2, 48, 5];\n/*MAP:\n\nconst new_numbers=numbers.map(function (x){\n    return x*2;//We have to enter another function to the map function bracket\n});\n\nconsole.log(new_numbers)*/\n\n/*Filter:\n\nconst new_number=numbers.filter(function (x){\n    return x>10;\n});\nconsole.log(new_number);*/\n//Reduce:\n\nnumbers.reduce(function (accumulator, currentNumber) {\n  console.log(\"accumulator = \" + accumulator);\n  console.log(\"currentNumber = \" + currentNumber);\n  return accumulator + currentNumber;\n});\nconsole.log(newNumber); //Map -Create a new array by doing something with each item in an array.\n//Filter - Create a new array by keeping the items that return true.\n//Reduce - Accumulate a value by doing something to each item in an array.\n//Find - find the first item that matches from an array.\n//FindIndex - find the index of the first item that matches.","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/Self Learning/Web Development/Web_development_logs/React_JS/Map,Reduce,Filter/src/index.js"],"names":["numbers","reduce","accumulator","currentNumber","console","log","newNumber"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,MAAR,CAAe,UAASC,WAAT,EAAqBC,aAArB,EAAmC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAiBH,WAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBF,aAA/B;AACA,SAAOD,WAAW,GAACC,aAAnB;AACH,CAJD;AAMAC,OAAO,CAACC,GAAR,CAAYC,SAAZ,E,CACA;AAEA;AAEA;AAEA;AAEA","sourcesContent":["var numbers = [3, 56, 2, 48, 5];\n/*MAP:\n\nconst new_numbers=numbers.map(function (x){\n    return x*2;//We have to enter another function to the map function bracket\n});\n\nconsole.log(new_numbers)*/\n\n/*Filter:\n\nconst new_number=numbers.filter(function (x){\n    return x>10;\n});\nconsole.log(new_number);*/\n\n//Reduce:\n \nnumbers.reduce(function(accumulator,currentNumber){\n    console.log(\"accumulator = \"+accumulator);\n    console.log(\"currentNumber = \"+currentNumber);\n    return accumulator+currentNumber;  \n})\n\nconsole.log(newNumber)\n//Map -Create a new array by doing something with each item in an array.\n\n//Filter - Create a new array by keeping the items that return true.\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\n//Find - find the first item that matches from an array.\n\n//FindIndex - find the index of the first item that matches.\n"]},"metadata":{},"sourceType":"module"}