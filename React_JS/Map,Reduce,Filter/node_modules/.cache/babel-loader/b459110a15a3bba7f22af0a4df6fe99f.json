{"ast":null,"code":"var numbers = [3, 56, 2, 48, 5];\n/*MAP:\n\nconst new_numbers=numbers.map(function (x){\n    return x*2;//We have to enter another function to the map function bracket\n});\n\nconsole.log(new_numbers)*/\n\n/*Filter:\n\nconst new_number=numbers.filter(function (x){\n    return x>10;\n});\nconsole.log(new_number);*/\n\n/*Reduce:\n \nvar newNumber=numbers.reduce(function(accumulator,currentNumber){\n    console.log(\"accumulator = \"+accumulator);\n    console.log(\"currentNumber = \"+currentNumber);\n    return accumulator+currentNumber;  \n})\n\nconsole.log(newNumber)*/\n\n/*Find:\nvar newNumber=numbers.find(function(num){\n    return num>10;\n})\nconsole.log(newNumber);*/\n//FindIndex:\n\nvar newNumber = numbers.find(function (num) {\n  return num > 10;\n}); //Map -Create a new array by doing something with each item in an array.\n//Filter - Create a new array by keeping the items that return true.\n//Reduce - Accumulate a value by doing something to each item in an array.\n//Find - find the first item that matches from an array.\n//FindIndex - find the index of the first item that matches.","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/Self Learning/Web Development/Web_development_logs/React_JS/Map,Reduce,Filter/src/index.js"],"names":["numbers","newNumber","find","num"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIC,SAAS,GAACD,OAAO,CAACE,IAAR,CAAa,UAASC,GAAT,EAAa;AACpC,SAAOA,GAAG,GAAC,EAAX;AACH,CAFa,CAAd,C,CAIA;AAEA;AAEA;AAEA;AAEA","sourcesContent":["var numbers = [3, 56, 2, 48, 5];\n/*MAP:\n\nconst new_numbers=numbers.map(function (x){\n    return x*2;//We have to enter another function to the map function bracket\n});\n\nconsole.log(new_numbers)*/\n\n/*Filter:\n\nconst new_number=numbers.filter(function (x){\n    return x>10;\n});\nconsole.log(new_number);*/\n\n/*Reduce:\n \nvar newNumber=numbers.reduce(function(accumulator,currentNumber){\n    console.log(\"accumulator = \"+accumulator);\n    console.log(\"currentNumber = \"+currentNumber);\n    return accumulator+currentNumber;  \n})\n\nconsole.log(newNumber)*/\n\n/*Find:\nvar newNumber=numbers.find(function(num){\n    return num>10;\n})\nconsole.log(newNumber);*/\n\n//FindIndex:\nvar newNumber=numbers.find(function(num){ \n    return num>10;\n})\n\n//Map -Create a new array by doing something with each item in an array.\n\n//Filter - Create a new array by keeping the items that return true.\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\n//Find - find the first item that matches from an array.\n\n//FindIndex - find the index of the first item that matches.\n"]},"metadata":{},"sourceType":"module"}